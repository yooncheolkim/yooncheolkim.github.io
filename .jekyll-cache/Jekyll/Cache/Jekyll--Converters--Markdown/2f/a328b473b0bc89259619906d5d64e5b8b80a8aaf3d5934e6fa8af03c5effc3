I" <h3 id="object-mapper-정리">object mapper 정리</h3>

<ul>
  <li>java spring을 사용하다 보니, 불가피하다.</li>
  <li>매번 구글링하기 귀찮아서 정리.</li>
</ul>

<h4 id="convertvalue">convertValue</h4>

<ul>
  <li>object(map 포함) to object</li>
</ul>

<h4 id="readvalue">readValue</h4>

<ul>
  <li>jsonString to object</li>
</ul>

<h4 id="typereference">TypeReference</h4>

<ul>
  <li>objectMapper 의 변환 함수는 두번째 인자로 TypeReference를 받을 수 있다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mapper.readValue(jsonStr, CommonResponseDTO.class);
// instead of
mapper.readValue(jsonStr, new TypeReference&lt;CommonResponseDTO&lt;TestDto&gt;&gt;() {});
</code></pre></div></div>

<ul>
  <li>Class 타입으로 받으면, mapper가 제네릭까지 알수 없기 때문에 TypeReference를 사용하여 convert 가능하다.</li>
  <li>컴파일 시점에 알수 없는 key, value에 대해서는 Map으로 convert 하는듯</li>
</ul>
:ET