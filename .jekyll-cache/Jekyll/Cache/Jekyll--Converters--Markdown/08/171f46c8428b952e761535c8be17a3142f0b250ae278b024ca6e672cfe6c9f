I"<h1 id="자바스크립트-prototype">자바스크립트 [Prototype]</h1>

<ul>
  <li>함수 생성자로 만들어진, 객체는 모두 <strong>proto</strong> 를 가지고 있다.</li>
  <li><strong>proto</strong> 는 부모객체(프로토타입)을 참조하고 있다.</li>
  <li>🔴 <strong>proto</strong> 는 legacy, 개발자가 직접 참조하여 사용하는거는 지양해야한다.</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">Yoon</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">aa</span><span class="dl">"</span><span class="p">);</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">dir</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span>
</code></pre></div></div>

<h1 id="자바스크립트-함수-생성자의-prototype">자바스크립트 함수 생성자의 prototype</h1>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">Yoon</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">aa</span><span class="dl">"</span><span class="p">);</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">dir</span><span class="p">(</span><span class="nx">Yoon</span><span class="p">);</span>
</code></pre></div></div>

<ul>
  <li>함수 생성자의 속성중 prototype이 있다.</li>
  <li>이 prototype 은 함수 생성자로 만들어진, 객체의 <strong>proto</strong> 와 같은곳을 참조하고 있다.</li>
  <li>Yoon.prototype</li>
</ul>

<h1 id="자바스크립트-룩업-방식">자바스크립트 룩업 방식</h1>

<ul>
  <li>자바스크립트는 객체의 속성을 찾는 방법이 있다.</li>
</ul>

<ol>
  <li>현재 객체 내부에서 찾는다.</li>
  <li>없으면, <strong>proto</strong> 가 참조하는 객체로 간다.</li>
  <li><strong>proto</strong> 가 참조하는 객체에서 찾는다.</li>
</ol>

<ul>
  <li>이런 방식으로 객체의 상속/오버라이드를 구현할 수 있다.</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">method1</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="dl">"</span><span class="s2">a1</span><span class="dl">"</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">};</span>

<span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">__proto__</span><span class="p">:</span> <span class="nx">a</span><span class="p">,</span>
  <span class="na">method2</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="dl">"</span><span class="s2">b1</span><span class="dl">"</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">};</span>

<span class="kd">var</span> <span class="nx">c</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">__proto__</span><span class="p">:</span> <span class="nx">b</span><span class="p">,</span>
  <span class="na">method3</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="dl">"</span><span class="s2">c3</span><span class="dl">"</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">};</span>

<span class="nx">a</span><span class="p">.</span><span class="nx">method1</span><span class="p">();</span>
<span class="nx">c</span><span class="p">.</span><span class="nx">method1</span><span class="p">();</span>
</code></pre></div></div>
:ET