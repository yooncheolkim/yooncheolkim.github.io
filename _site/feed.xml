<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>윤철이 블로그</title>
		<description>Software Developer</description>
		<link></link>
		<atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>EC2에 배포환경 세팅</title>
				<description>&lt;h2 id=&quot;java-8-설치&quot;&gt;java 8 설치&lt;/h2&gt;
&lt;p&gt;sudo yum install -y java-1.8.0-openjdk-devel.x86_64&lt;/p&gt;

&lt;h2 id=&quot;인스턴스-자바-버전-변경&quot;&gt;인스턴스 자바 버전 변경&lt;/h2&gt;
&lt;p&gt;sudo /usr/sbin/alternatives –config java&lt;br /&gt;
sudo yum remove java-1.7.0-openjdk&lt;br /&gt;
java -version&lt;/p&gt;

&lt;h2 id=&quot;maven-설치&quot;&gt;maven 설치&lt;/h2&gt;
&lt;p&gt;sudo wget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo&lt;br /&gt;
sudo sed -i s/$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo&lt;br /&gt;
sudo yum install -y apache-maven&lt;br /&gt;
mvn –version&lt;/p&gt;

&lt;h2 id=&quot;maven-package&quot;&gt;maven package&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;test 없이 package&lt;br /&gt;
mvn clean package -DskipTests=true&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;maven-build-시-out-of-memory-혹은-java-heap-space-부족&quot;&gt;maven build 시 out of memory 혹은 java heap space 부족&lt;/h2&gt;
&lt;p&gt;set MAVEN_OPTS=”-Xmx512m”&lt;br /&gt;
Or&lt;br /&gt;
export MAVEN_OPTS=-Xmx512m&lt;/p&gt;

</description>
				<pubDate>Fri, 03 Apr 2020 05:46:00 +0900</pubDate>
				<link>/2020/04/EC2-deploy/</link>
				<guid isPermaLink="true">/2020/04/EC2-deploy/</guid>
			</item>
		
			<item>
				<title>aws에 초기 세팅(spring boot)</title>
				<description>&lt;h2 id=&quot;aws-ec2-생성&quot;&gt;AWS EC2 생성&lt;/h2&gt;

&lt;h4 id=&quot;보안-그룹-구성&quot;&gt;보안 그룹 구성&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;SSH, 22포트 는 EC2 터미널 원격 접속 할때 사용,&lt;/li&gt;
  &lt;li&gt;IP 지정 하기 귀찮아서, 전체오픈(0.0.0.0/0) 해버리면 인생망할수도 있음&lt;/li&gt;
  &lt;li&gt;ssh 설정은 집 ip만 해놓고, 자주 사용하는 곳만 그때그때 추가하고 삭제&lt;/li&gt;
  &lt;li&gt;http, https 는 웹 서비스 접근할때 사용하니 80, 443 포트 열어 넣기&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;고정-ip--elastic-ip&quot;&gt;고정 IP , Elastic IP&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;그냥 인스턴스 실행시키면, 고정IP가 할당된게 아니라, 재시작 할때 마다 새로운 ip가 생긴다.&lt;/li&gt;
  &lt;li&gt;탄력적ip 에서, 새 주소 할당 받고, 인스턴스에 프라이빗 ip를 탄력적ip로 설정&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;터미널-접속&quot;&gt;터미널 접속&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;본인 로컬 pc에서 매번 접속할때 마다, ssh -i pem키 외부ip 입력해야한다.&lt;/li&gt;
  &lt;li&gt;귀찮기 때문에,&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;키페어 파일을 ~/.ssh/ 로 복사&lt;br /&gt;
cp jaeyoon-worldcup.pem ~/.ssh/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;키페어 권한 변경&lt;br /&gt;
chmod 600 ./jaeyoon-worldcup.pem&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;config 파일 생성&lt;br /&gt;
nano config&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Host yc_jaeyoon-worldcup&lt;br /&gt;
    HostName 탄력적ip주소&lt;br /&gt;
    User ec2-user   – 기본적으로 ec2-user&lt;br /&gt;
    IdentityFile ~/.ssh/jaeyoon-worldcup.pem&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;접속&lt;br /&gt;
ssh yc_jaeyoon-worldcup&lt;/li&gt;
&lt;/ol&gt;

</description>
				<pubDate>Fri, 03 Apr 2020 05:32:00 +0900</pubDate>
				<link>/2020/04/aws-EC2/</link>
				<guid isPermaLink="true">/2020/04/aws-EC2/</guid>
			</item>
		
			<item>
				<title>docker jenkins 구동</title>
				<description>&lt;h3 id=&quot;jenkins-image-받아오기&quot;&gt;jenkins image 받아오기&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker pull jenkins/jenkins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -d -p 8181:8080 -v jyjenkins:/var/jenkins_home --name jyjenkins -u root jenkins/jenkins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;d : 컨테이너 백그라운드 실행&lt;/li&gt;
  &lt;li&gt;p : 로컬 pc와 docker 포트 설정 , localIp:dockerIp&lt;/li&gt;
  &lt;li&gt;v : file sharing&lt;/li&gt;
  &lt;li&gt;name : 이름 설정&lt;/li&gt;
&lt;/ul&gt;

&lt;image src=&quot;/images/스크린샷 2020-03-29 오후 7.49.17.png&quot;&gt;&lt;/image&gt;
&lt;ul&gt;
  &lt;li&gt;docker 화면에서 확인 가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;image src=&quot;/images/스크린샷 2020-03-29 오후 7.51.32.png&quot;&gt;&lt;/image&gt;

&lt;h2 id=&quot;ngrok&quot;&gt;ngrok&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;젠킨스 외부 ip 가질수 있게 설정&lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Mon, 30 Mar 2020 04:30:00 +0900</pubDate>
				<link>/2020/03/docker-jenkins/</link>
				<guid isPermaLink="true">/2020/03/docker-jenkins/</guid>
			</item>
		
			<item>
				<title>exif로 사진 똑바로하기</title>
				<description>&lt;h2 id=&quot;자바스크립트-img-태그에서-blob-가져와서-exif-데이터로-사진-똑바로-나오게-하기&quot;&gt;자바스크립트, img 태그에서 blob 가져와서 exif 데이터로 사진 똑바로 나오게 하기,&lt;/h2&gt;

&lt;h3 id=&quot;exif-orientation&quot;&gt;exif, orientation&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;이미지 파일에서, exif 값으로 orientation 값을 가져올수 있다.&lt;/li&gt;
  &lt;li&gt;보통 스마트폰으로 찍은 사진은 스마트폰 회전 정도에 따라 이 orientation 값이 달라진다.&lt;/li&gt;
  &lt;li&gt;https://github.com/blueimp/JavaScript-Load-Image&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;javascript&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://cdnjs.cloudflare.com/ajax/libs/blueimp-load-image/2.24.0/load-image.all.min.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;srcLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;left_img&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;srcLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blob&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;loadImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;blob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;#left_img&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toDataURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;image/jpeg&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;orientation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
				<pubDate>Fri, 20 Mar 2020 07:30:00 +0900</pubDate>
				<link>/2020/03/exif-orientation/</link>
				<guid isPermaLink="true">/2020/03/exif-orientation/</guid>
			</item>
		
			<item>
				<title>리플렉션으로 DI 구현</title>
				<description>&lt;h2 id=&quot;리플렉션&quot;&gt;리플렉션&lt;/h2&gt;

&lt;h3 id=&quot;리플렉션의-시작은-classt&quot;&gt;리플렉션의 시작은 Class&amp;lt;T&amp;gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;모든 클래스가 로딩되고, Class&amp;lt;T&amp;gt;의 인스턴스가 생긴다.&lt;/li&gt;
  &lt;li&gt;타입.class 로 접근가능하다.&lt;/li&gt;
  &lt;li&gt;모든 인스턴스는 .getClass()를 가지고 있다. 이걸로도 접근가능하다.&lt;/li&gt;
  &lt;li&gt;Class.forName(“type”) 으로도 가져올수 있다. 없으면 Exception&lt;/li&gt;
  &lt;li&gt;변수, 메소드, 상위클래스, 어노테이션, 인터페이스 가져올수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;어노테이션과-리플렉션&quot;&gt;어노테이션과 리플렉션&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;@Retention : 어노테이션 언제까지 유지할까요, 소스? 클래스? 런타임?&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight filename&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Retention&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;RetentionPolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RUNTIME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BookService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;@Inherit : 해당 애노테이션을 하위 클래스에 전달할것인가?&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Target : 어디에 사용할 수 있는가?&lt;br /&gt;
&amp;lt;/br&amp;gt;&amp;lt;/br&amp;gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;getAnnotations() : 상속받은 애노테이션까지 조회&lt;/li&gt;
  &lt;li&gt;getDeclaredAnnotations() : 자기 자신에만 붙어있는 애노테이션 조회&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;reflection-으로-di-구현하기&quot;&gt;reflection 으로 DI 구현하기&lt;/h3&gt;

&lt;blockquote class=&quot;filename&quot;&gt;
  &lt;p&gt;Java&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ContainerService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDeclaredFields&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;{&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAnnotation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Inject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fieldInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAccessible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fieldInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;IllegalAccessException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getConstructor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;InstantiationException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IllegalAccessException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NoSuchMethodException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InvocationTargetException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight filename&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Retention&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;RetentionPolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RUNTIME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Inject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
				<pubDate>Fri, 13 Mar 2020 06:52:00 +0900</pubDate>
				<link>/2020/03/di-by-reflection/</link>
				<guid isPermaLink="true">/2020/03/di-by-reflection/</guid>
			</item>
		
			<item>
				<title>first post</title>
				<description>&lt;ul&gt;
  &lt;li&gt;왠지는 모르겠지만,,&lt;br /&gt;
jekyll serve 안될때,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;source ~/.zshrc&lt;/p&gt;

&lt;p&gt;해주고 하면 잘된다..&lt;/p&gt;

&lt;p&gt;참고 &lt;a href=&quot;https://jojoldu.tistory.com/288&quot;&gt;https://jojoldu.tistory.com/288&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Wed, 11 Mar 2020 07:21:00 +0900</pubDate>
				<link>/2020/03/jekyll/</link>
				<guid isPermaLink="true">/2020/03/jekyll/</guid>
			</item>
		
	</channel>
</rss>
